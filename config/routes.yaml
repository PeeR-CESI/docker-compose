http:
  routers:
    web-to-frontend:
      rule: "Host(`peer.cesi`) && Path(`/`)"
      service: "frontend-service"
      entryPoints:
        - "http"

    # hello-world-user:
    #   rule: "Host(`peer.cesi`) && PathPrefix(`/`)"
    #   service: "user-management-service"
    #   entryPoints:
    #     - "http"

    service-router:
      rule: "Host(`peer.cesi`) && PathPrefix(`/api/service`)"
      service: "service-management-service"
      middlewares:
        - "strip-api-prefix"
      entryPoints:
        - "http"

    auth-router:
      rule: "Host(`peer.cesi`) && PathPrefix(`/api/auth`)"
      service: "user-management-service"
      middlewares:
        - "strip-api-prefix"
      entryPoints:
        - "http"

    user-router:
      rule: "Host(`peer.cesi`) && PathPrefix(`/api/user`)"
      service: "user-management-service"
      middlewares:
        - "strip-api-prefix"
      entryPoints:
        - "http"

    avis-router:
      rule: "Host(`peer.cesi`) && PathPrefix(`/api/avis`)"
      service: "service-management-service"
      middlewares:
        - "strip-api-prefix"
      entryPoints:
        - "http"

  services:
    frontend-service:
      loadBalancer:
        servers:
          - url: "http://frontend:80"
    user-management-service:
      loadBalancer:
        servers:
          - url: "http://user-management:5000"
    service-management-service:
      loadBalancer:
        servers:
          - url: "http://service-management:5010"
    notification-service:
      loadBalancer:
        servers:
          - url: "http://notification-service:5020"
    messaging-service:
      loadBalancer:
        servers:
          - url: "http://messaging-service:5030"

  middlewares:
    strip-api-prefix:
      stripPrefix:
        prefixes:
          - "/api"
