---
services:
  traefik:
    image: traefik:v2.11
    restart : unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true" # Active la découverte automatique des conteneurs Docker
      - "--providers.file.directory=/etc/traefik/config" # Pour la configuration dynamique depuis des fichiers
      - "--providers.file.watch=true" # Traefik surveille les changements de configuration
      - "--entryPoints.http.address=:80" # Définit l'entrée pour le trafic HTTP
      # Si on veut du HTTPS :
      # - "--entryPoints.https.address=:443"
      # - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
      # - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
    ports:
      - "80:80" # HTTP
      # - "443:443" # HTTPS
      - "8081:8080" # Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" # Permet à Traefik d'interagir avec l'API Docker
      - "./config:/etc/traefik/config" # Emplacement des fichiers de configuration dynamique
      # - "./acme.json:/acme.json" # Certificats HTTPS
    networks:
      - microservices

  # frontend:
  #   image: xpapaya/front-end:dev-13
  #   restart : unless-stopped
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - microservices

  frontend-bis:
    image: xpapaya/front-test:v0.3.0
    restart : unless-stopped
    ports:
      - "8080:80"
    volumes: 
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - microservices

  user-management:
    image: xpapaya/user-management:v0.6.0
    depends_on:
      - postgresql
    ports:
    - "5000:5000" # Accès à swagger sur http://localhost:5000/apidocs
    restart : unless-stopped
    networks:
      - microservices

  service-management:
    image: xpapaya/service-management:v0.6.0
    depends_on:
      - mongodb
    ports:
    - "5010:5010" # Accès à swagger sur http://localhost:5010/apidocs
    restart : unless-stopped
    networks:
      - microservices

  # messaging-service:
  #   image: xpapaya/messaging-service:v0.1.0
  #   ports:
  #   - "5030:5030" # Accès à swagger sur http://localhost:5030/apidocs
  #   restart : unless-stopped
  #   networks:
  #     - microservices

  # notification-service:
  #   image: xpapaya/notification-service:v0.1.0
  #   depends_on:
  #     - redis
  #   ports:
  #   - "5020:5020" # Accès à swagger sur http://localhost:5020/apidocs
  #   restart : unless-stopped
  #   networks:
  #     - microservices
  
  mongodb:
    image: mongo:latest
    restart : unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo-data:/data/db
    networks:
      - microservices

  postgresql:
    image: postgres:latest
    restart : unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      # POSTGRES_DB:
    volumes:
      - postgres-data:/var/lib/postgresql/data:Z
    networks:
      - microservices

  # adminer:
  #   image: adminer:latest
  #   restart: unless-stopped
  #   ports:
  #     - "8082:8080"
  #   networks:
  #     - microservices

  # redis:
  #   image: redis:latest
  #   restart: unless-stopped
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - microservices

networks:
  microservices:
    name: microservices

volumes:
  mongo-data:
  redis-data:
  postgres-data: